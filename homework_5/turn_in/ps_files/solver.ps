%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: John Spaeth
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Sat Mar 28 15:08:31 2020
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6 6

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 547 def
/d_page_h 794 def
/d_header_x 0 def
/d_header_y 779 def
/d_header_w 547 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 547 def
/d_footer_h 0 def
/d_output_w 547 def
/d_output_h 779 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
24 24 translate
/pagenum 1 def
/fname (py_files/solver.py) def
/fdir (py_files) def
/ftail (solver.py) def
% User defined strings:
/fmodstr (Sat Mar 28 15:05:52 2020) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(#!/usr/bin/env python3) s
5 744 M
(import statistics) s
5 733 M
(import os) s
5 722 M
(import pickle) s
5 711 M
(import glob) s
5 700 M
(import sys) s
5 678 M
(import gym) s
5 667 M
(import matplotlib.pyplot as plt) s
5 656 M
(from yacs.config import CfgNode as CN) s
5 645 M
(import tensorflow.keras as keras) s
5 623 M
(from agents import DQN, TargetDQN) s
5 612 M
(from policies import epsilon_episode_decay, random_policy, epsilon_greedy_policy_generato) s
5 601 M
(r, acrobot_epsilon_decay) s
5 579 M
(### Hyperparameter options) s
5 568 M
(# gamma = [.99, 1]) s
5 557 M
(# n_units = [[16, 8], [32, 16], [40]]) s
5 546 M
(# learning_rate = [.01, .001]) s
5 535 M
(# target_freq = [25, 50]) s
5 513 M
(### Experiments: 1000 episodes; epsilon decay 300; batch size 2000; learning delay 50;) s
5 502 M
(# --Gamma--) s
5 491 M
(# 1: DQN; gamma=.99; n_units=[16, 8]; learning_rate=.01) s
5 480 M
(# 2: DQN; gamma=1; n_units=[16, 8]; learning_rate=.01) s
5 469 M
(# 3: DQN; gamma=.98; n_units=[16, 8]; learning_rate=.01) s
5 458 M
(# 4: DQN; gamma=.97; n_units=[16, 8]; learning_rate=.01) s
5 447 M
(# 5: DQN; gamma=.96; n_units=[16, 8]; learning_rate=.01 <--) s
5 436 M
(# 6: DQN; gamma=.95; n_units=[16, 8]; learning_rate=.01) s
5 425 M
(# 7: DQN; gamma=.94; n_units=[16, 8]; learning_rate=.01) s
5 414 M
(# 8: DQN; gamma=.93; n_units=[16, 8]; learning_rate=.01) s
5 403 M
(# --> Pick best) s
5 392 M
(# --Learning rate--) s
5 381 M
(# 9: DQN; gamma=.96; n_units=[16, 8]; learning_rate=.001 <--) s
5 370 M
(# --> Pick best) s
5 359 M
(# --Network--) s
5 348 M
(# 10: DQN; gamma=.96; n_units=[32, 16]; learning_rate=.001) s
5 337 M
(# 11: DQN; gamma=.96; n_units=[40]; learning_rate=.001 <--) s
5 326 M
(# --> Pick best) s
5 315 M
(# Target update frequency) s
5 304 M
(# 12: TargetDQN; gamma=.96; n_units=[40]; learning_rate=.001; target_freq=25 <--) s
5 293 M
(# 13: TargetDQN; gamma=.96; n_units=[40]; learning_rate=.001; target_freq=50) s
5 282 M
(# --> Pick best) s
5 271 M
(# Batch size :::: TRASHED BC TARGET FREQ 50) s
5 260 M
(# 14: TargetDQN; gamma=.96; n_units=[40]; learning_rate=.001; target_freq=25; batch size ) s
5 249 M
(64) s
5 238 M
(# 15: TargetDQN; gamma=.96; n_units=[30]; learning_rate=.001; target_freq=25) s
5 227 M
(# 16: TargetDQN; gamma=.96; n_units=[20]; learning_rate=.001; target_freq=25) s
5 216 M
(# 17: TargetDQN; gamma=.96; n_units=[60]; learning_rate=.001; target_freq=25) s
5 205 M
(# 18: Experiment 12 for 3000 episodes) s
5 194 M
(# 19: TargetDQN; gamma=.99; n_units=[40]; learning_rate=.001; target_freq=25 <--) s
5 183 M
(# 20: Experiment 19 for 3000 episodes) s
5 172 M
(# 21: TargetDQN; gamma=1; n_units=[40]; learning_rate=.001; target_freq=25) s
5 161 M
(# 22: TargetDQN; gamma=.99; n_units=[40]; learning_rate=.001; target_freq=25; Epsilon dec) s
5 150 M
(ay to .01 <--) s
5 139 M
(# 23: TargetDQN; gamma=1; n_units=[40]; learning_rate=.001; target_freq=25; Epsilon decay) s
5 128 M
( to .01) s
5 117 M
(# 24: TargetDQN; gamma=1; n_units=[40]; learning_rate=.001; target_freq=50; Epsilon decay) s
5 106 M
( to .01) s
5 95 M
(# 25: TargetDQN; gamma=.99; n_units=[40]; learning_rate=.001; target_freq=50; Epsilon dec) s
5 84 M
(ay to .01) s
5 73 M
(# 26: Experiment 22 with L2 .1) s
5 62 M
(# 27: Experiment 22 with L2 .01) s
5 51 M
(# 28: Experiment 22 with L2 .001) s
5 40 M
(# 29: Experiment 22 with L2 .0001) s
5 29 M
(# Final choice: Experiment 22. Before final test, might need to remove the regularizer st) s
5 18 M
(uff) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
24 24 translate
/pagenum 2 def
/fname (py_files/solver.py) def
/fdir (py_files) def
/ftail (solver.py) def
% User defined strings:
/fmodstr (Sat Mar 28 15:05:52 2020) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(# Figure 1: 5 independent runs with experiment 22) s
5 755 M
(# Figure 2: 5 independent runs with experiment 22 modified with learning rate of .01) s
5 733 M
(def save_results_and_models\(agent, agent_folder, trial_name\):) s
5 722 M
(    fbase = "{}/".format\(agent_folder\)) s
5 711 M
(    if not os.path.exists\(fbase\):) s
5 700 M
(        os.mkdir\(fbase\)) s
5 678 M
(    fbase = "{}/".format\(fbase + trial_name\)) s
5 667 M
(    if not os.path.exists\(fbase\):) s
5 656 M
(        os.mkdir\(fbase\)) s
5 634 M
(    results = {}) s
5 623 M
(    results["rewards"] = agent.reward_log) s
5 612 M
(    results["losses"] = agent.loss_log) s
5 601 M
(    print\("Reward log length: {}".format\(len\(results["rewards"]\)\)\)) s
5 590 M
(    print\("Loss log length: {}".format\(len\(results["losses"]\)\)\)) s
5 568 M
(    # Save full results binary) s
5 557 M
(    with open\("{}results_dict.pkl".format\(fbase\), "wb"\) as f:) s
5 546 M
(        pickle.dump\(results, f\)) s
5 524 M
(    if agent.type == "DQN":) s
5 513 M
(        agent.model.save\("{}model.h5".format\(fbase\)\)) s
5 502 M
(    elif agent.type == "TargetDQN":) s
5 491 M
(        agent.model.save\("{}model.h5".format\(fbase\)\)) s
5 480 M
(        agent.target_model.save\("{}target_model.h5".format\(fbase\)\)) s
5 458 M
(def main\(\):) s
5 436 M
(    agent_folder = sys.argv[1]) s
5 425 M
(    trial_name = sys.argv[2]) s
5 403 M
(    keras.backend.clear_session\(\)) s
5 381 M
(    # Create environment) s
5 370 M
(    env = gym.make\('Acrobot-v1'\)) s
5 359 M
(    print\("State space: {}".format\(env.observation_space\)\)) s
5 348 M
(    print\("Action space: {}".format\(env.action_space\)\)) s
5 326 M
(    # Create agent configuration) s
5 315 M
(    agent_class = DQN) s
5 304 M
(    state_size = env.observation_space.shape[0]) s
5 293 M
(    action_size = env.action_space.n) s
5 282 M
(    policy = epsilon_greedy_policy_generator\(-1, 2\)) s
5 271 M
(    loss_fn = keras.losses.mean_squared_error) s
5 260 M
(    epsilon = epsilon_episode_decay\(1, .1, 300\)) s
5 249 M
(    gamma = .99) s
5 238 M
(    buffer_size = 10000) s
5 227 M
(    n_units = [16, 8]) s
5 216 M
(    l2 = 0) s
5 205 M
(    learning_rate = .01) s
5 194 M
(    learning_delay = 50) s
5 183 M
(    learning_freq = 1) s
5 172 M
(    verbose = True) s
5 161 M
(    target_update_freq = 25) s
5 139 M
(    # Create silent episode configuration) s
5 128 M
(    silent_episodes = CN\(\)) s
5 117 M
(    silent_episodes.n_episodes = 1000) s
5 106 M
(    silent_episodes.n_steps = 500) s
5 95 M
(    silent_episodes.render_flag = False) s
5 84 M
(    silent_episodes.batch_size = 2000) s
5 73 M
(    silent_episodes.verbose = True) s
5 51 M
(    # Create visible episodes configuration) s
5 40 M
(    visible_episodes = CN\(\)) s
5 29 M
(    visible_episodes.n_episodes = 1) s
5 18 M
(    visible_episodes.n_steps = 500) s
5 7 M
(    visible_episodes.render_flag = False) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
24 24 translate
/pagenum 3 def
/fname (py_files/solver.py) def
/fdir (py_files) def
/ftail (solver.py) def
% User defined strings:
/fmodstr (Sat Mar 28 15:05:52 2020) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 766 M
(    visible_episodes.batch_size = 2000) s
5 755 M
(    visible_episodes.verbose = True) s
5 733 M
(    # Build agent) s
5 722 M
(    agent = agent_class\() s
5 711 M
(        state_size=state_size,) s
5 700 M
(        action_size=action_size,) s
5 689 M
(        policy=policy,) s
5 678 M
(        loss_fn=loss_fn,) s
5 667 M
(        epsilon=epsilon,) s
5 656 M
(        gamma=gamma,) s
5 645 M
(        buffer_size=buffer_size,) s
5 634 M
(        n_units=n_units,) s
5 623 M
(        l2=l2,) s
5 612 M
(        learning_rate=learning_rate,) s
5 601 M
(        learning_delay=learning_delay,) s
5 590 M
(        learning_freq=learning_freq,) s
5 579 M
(        verbose=verbose,) s
5 568 M
(        target_update_freq=target_update_freq) s
5 557 M
(        \)) s
5 535 M
(    print\("--Training--"\)) s
5 524 M
(    print\("\\tAgent type: {}".format\(agent.type\)\)) s
5 502 M
(    # Run silent episodes) s
5 491 M
(    agent.execute_episodes\() s
5 480 M
(        env=env,) s
5 469 M
(        n_episodes=silent_episodes.n_episodes,) s
5 458 M
(        n_steps=silent_episodes.n_steps,) s
5 447 M
(        render_flag=silent_episodes.render_flag,) s
5 436 M
(        batch_size=silent_episodes.batch_size,) s
5 425 M
(        verbose=silent_episodes.verbose) s
5 414 M
(        \)) s
5 392 M
(    # Run visible episodes) s
5 381 M
(    agent.execute_episodes\() s
5 370 M
(        env=env,) s
5 359 M
(        n_episodes=visible_episodes.n_episodes,) s
5 348 M
(        n_steps=visible_episodes.n_steps,) s
5 337 M
(        render_flag=visible_episodes.render_flag,) s
5 326 M
(        batch_size=visible_episodes.batch_size,) s
5 315 M
(        verbose=visible_episodes.verbose,) s
5 304 M
(        train=False) s
5 293 M
(        \)) s
5 271 M
(    save_results_and_models\(agent, agent_folder, trial_name\)) s
5 249 M
(if __name__ == "__main__":) s
5 238 M
(    main\(\)) s
_R
S
%%Trailer
%%Pages: 3
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
